#Nginx负载均衡配置
#server块,要被代理的服务器地址，
server{
   listen 80;
   server_name a.com;


   #location块是server块的一个指令。作用：基于Nginx服务器接收到的请求字符串，虚拟主机名称（ip，域名）、url匹配，对特定请求进行处理。

   location /A { #注意：这个一集路径必须要和tomcat/webapp下的一集路径名一致（除了ROOT名称）（a.com/A），即tomcat下的webapp/ROOT/A/index.html。
      proxy_pass  http://A; 
       #被代理转发的目标地址，当访问 "httt://a.com/A" 时则将请求转发到upstream(负载均衡模块中)的192.168.1.2:1111/1112/1113 服务器上去.注意：后面不会跟上路径，只是单纯将请求转发到（http://192.168.1.2:1111/1112/1113）服务器上,然后手动跟要访问的服务器下的资源路径。（http://a.com/A/EE/SSD）
   }

    location /B {
       proxy_pass  http://B;
    }

    location /C {
       proxy_pass  http://C;
    }

}  

#根据上面的location 模块配置相应的负载均衡。
upstream  A {   #注意这里的 “A” 名称必须要和 location 里面的proxy_pass名称完全一样。
   server  192.168.1.2:1111;
   server  192.168.1.2:1112;
   server  192.168.1.2:1113;
  # ip_hash;  # ip_hash(负载均衡策略) 可以使用户始终负载到第一次访问的服务器上，防止，第一次用户请求负载到服务器1上，下次请求到服务器2上去了，防止Cookie/Session，失效的问题。注意：在本地模拟不需要打开加ip_hash因为，实现不出来负载均衡效果，请求始终在一台服务器上。
}

upstream  B {
   server  192.168.1.2:2221;
   server  192.168.1.2:2222;
   server  192.168.1.2:2223;
  # ip_hash;
}

upstream  C {
   server  192.168.1.2:3331;
   server  192.168.1.2:3332;
   server  192.168.1.2:3333;
  # ip_hash;
}
